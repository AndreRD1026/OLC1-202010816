package analizadores;
import java_cup.runtime.Symbol;



parser code
{:
    public static LinkedList<TError> errores = new LinkedList<TError>(); 

    public static String Conjunto="";
    public static String tipo="Lista";


    //Metodo al que se llama automaticamente ante algun error sintactico
    public void syntax_error(Symbol s)
    {        
        String lexema = s.value.toString();
        int fila = s.right;
        int columna = s.left;
      
        System.out.println("!!!!!!! Error Sintactico Recuperado !!!!!!!");
        System.out.println("\t\tLexema: "+lexema);
        System.out.println("\t\tFila: "+fila);
        System.out.println("\t\tColumna: "+columna);

        TError tmp = new TError("Sintactico",lexema,"Caracter no esperado",fila,columna);
        errores.add(tmp);
        
    }

    //Metodo al que se llama en el momento en que ya no es posible una recuperacion de errores
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception
    {        
        String lexema = s.value.toString();
        int fila = s.right;
        int columna = s.left;
        
        System.out.println("!!!!!!! Error Sintactico, Panic Mode !!!!!!! ");
        System.out.println("\t\tLexema: "+lexema);
        System.out.println("\t\tFila: "+fila);
        System.out.println("\t\tColumna: "+columna);
        
        TError tmp = new TError("Sintactico",lexema, "TOKEN NO ERA EL ESPERADO",fila,columna);
        errores.add(tmp);
     
    }
:}


//definicion de terminales
terminal id;
terminal var;
terminal coma;
terminal puntoycoma;
terminal numero;
terminal Cadena;
terminal cruz;
terminal guion;
terminal asterisco;
terminal diagonal;
terminal parA;
terminal parC;
terminal guionBajo;
terminal flecha;
terminal interrogaciona;
terminal interrogacionc;
terminal igual;
terminal prInicio;
terminal prBoolean;
terminal prVerdadero;
terminal prFalso;
terminal prNumero;
terminal prPotencia;
terminal prMod;
terminal prIngresar;
terminal prComo;
terminal prConValor;
terminal prSi;
terminal prEntonces;
terminal prFinSi;
terminal prOSi;
terminal prDeloContrario;
terminal prSegun;
terminal prHacer;
terminal prFinSegun;
terminal prPara;
terminal prHasta;
terminal prFinPara;
terminal prIncremental;
terminal prMientras;
terminal prFinMientras;
terminal prRepetir;
terminal prHastaQue;
terminal prRetornar;
terminal prMetodo;
terminal prConParametros;
terminal prFinMetodo;
terminal prFuncion;
terminal prFinFuncion;
terminal prEjecutar;
terminal prImprimir;
terminal prImprimirNl;
terminal prFin;

//definicion de no terminales
non terminal INICIO, E, INSTRUCCION, SIMBOLOS, PALABRASR, VARIABLE;



//gramaticas
start with INICIO;

INICIO::= prInicio INSTRUCCION {:System.out.println("FIN DE ANALISIS");:};



INSTRUCCION::= SIMBOLOS INSTRUCCION
            | PALABRASR INSTRUCCION
            | prFin
;

SIMBOLOS::= flecha SIMBOLOS
            | var SIMBOLOS
            | numero SIMBOLOS
            | Cadena SIMBOLOS
            | cruz SIMBOLOS
            | guion SIMBOLOS
            | asterisco SIMBOLOS
            | diagonal SIMBOLOS
            | parA SIMBOLOS
            | parC SIMBOLOS
            | guionBajo SIMBOLOS
            | interrogaciona SIMBOLOS
            | interrogacionc SIMBOLOS
            | igual SIMBOLOS
            | puntoycoma
;

PALABRASR::= prBoolean
            | prVerdadero
            | prFalso
            | prNumero
            | prPotencia
            | prMod
            | prIngresar
            | prComo
            | prConValor
            | prSi
            | prEntonces
            | prFinSi
            | prOSi
            | prDeloContrario
            | prSegun
            | prHacer
            | prFinSegun
            | prPara
            | prHasta
            | prFinPara
            | prIncremental
            | prMientras
            | prFinMientras
            | prRepetir
            | prHastaQue
            | prRetornar
            | prMetodo
            | prConParametros
            | prFinMetodo
            | prFuncion
            | prFinFuncion
            | prEjecutar
            | prImprimir
            | prImprimirNl
;


VARIABLE::= var SIMBOLOS
            | PALABRASR
;