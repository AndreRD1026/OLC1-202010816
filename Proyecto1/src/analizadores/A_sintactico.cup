package analizadores;
import java_cup.runtime.Symbol;
import java.util.LinkedList;
import java.io.IOException;
import java.io.PrintWriter;

parser code 
{:


    public static LinkedList<TError> errores = new LinkedList<TError>(); 

    public static String tipo="Lista";
    public String codigoTraducidoPython="";
    public String errorm="";

    
    /**
     * Método al que se llama automáticamente ante algún error sintactico.
     **/ 
    public void syntax_error(Symbol s){ 
        String lexema = s.value.toString();
        int fila = s.right;
        int columna = s.left;

        System.out.println("!!!!!!! Error Sintactico Recuperado !!!!!!!");
        System.out.println("\t\t" + errorm);
        System.out.println("\t\tLexema: "+lexema);
        System.out.println("\t\tFila: "+fila);
        System.out.println("\t\tColumna: "+columna);

        TError tmp = new TError("Sintactico",lexema,"Caracter no esperado",fila,columna);
        errores.add(tmp);
    } 

    /**
     * Método al que se llama automáticamente ante algún error sintáctico 
     * en el que ya no es posible una recuperación de errores.
     **/ 
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        String lexema = s.value.toString();
        int fila = s.right;
        int columna = s.left;

        System.out.println("Error síntactico irrecuperable en la Línea " + 
        (s.left + 1)+ " Columna "+s.right+". Componente " + s.value + 
        " no reconocido."); 

        TError tmp = new TError("Sintactico",lexema, "TOKEN NO ERA EL ESPERADO",fila,columna);
        errores.add(tmp);
    }  
:}


//definicion de terminales
terminal String tvariable;
terminal String tcaracter;
terminal String tpunto;
terminal String tcoma;
terminal String tpuntoycoma;
terminal String tnumero_int;
terminal String tnumero_float;
terminal String tcadena;
terminal String tcomentario;
terminal String tcomentarioMulti;
terminal String tsuma;
terminal String tresta;
terminal String tmultiplicacion;
terminal String tdivision;
terminal String tmodulo;
terminal String tparA;
terminal String tparC;
terminal String tguionBajo;
terminal String tflecha;
terminal String tinterrogaciona;
terminal String tinterrogacionc;
terminal String tigual;
terminal String prInicio;
terminal String prBoolean;
terminal String prVerdadero;
terminal String prFalso;
terminal String prCaracter;
terminal String prNumero;
terminal String prCadena;
terminal String prPotencia;
terminal String prMod;
terminal String prIngresar;
terminal String prComo;
terminal String prConValor;
terminal String prSi;
terminal String prMayorIgual;
terminal String prMenorIgual;
terminal String prEsIGUAL;
terminal String prEntonces;
terminal String prFinSi;
terminal String prOSi;
terminal String prDeloContrario;
terminal String prSegun;
terminal String prHacer;
terminal String prFinSegun;
terminal String prPara;
terminal String prHasta;
terminal String prFinPara;
terminal String prIncremental;
terminal String prMientras;
terminal String prFinMientras;
terminal String prRepetir;
terminal String prHastaQue;
terminal String prRetornar;
terminal String prMetodo;
terminal String prConParametros;
terminal String prFinMetodo;
terminal String prFuncion;
terminal String prFinFuncion;
terminal String prEjecutar;
terminal String prImprimir;
terminal String prImprimirNl;
terminal String prFin;


//precedencia de los operadores

//precedence left tsuma,tresta, tmultiplicacion,tdivision, tmodulo;


//definicion de no terminales
non terminal INICIO,INSTRUCCIONES,INSTRUCCION, ERROR;
non terminal E,DECLARACIONES,ASIGNACIONES,COMENTARIOS,COMENTARIO_MULTI,IF,SELECCION_MULTIPLE,CICLO_FOR, CICLO_WHILE; 
non terminal CICLO_DOWHILE,RETORNO,METODO,FUNCIONES,PARAMETROS,EJECUTAR,IMPRIMIR,IMPRIMIRNL;
non terminal DECLARARNUM,DECLARARNUML,DECLARARCADENA,DECLARARCADENAL,DECLARARBOOLEANO,DECLARARBOOLEANOL,DECLARARCARACTER;
non terminal DECLARARCARACTERL,LISTAVARIABLES,LISTAVARIABLES2,CONDICION,ERROR_INSTRUCCIONES;
non terminal ASIGNARNUM,ASIGNARNUML,ASIGNARCADENA,ASIGNARCADENAL,ASIGNARBOOLEANO,ASIGNARBOOLEANOL,ASIGNARCARACTER,ASIGNARCARACTERL;
non terminal EXPRESIONARITMETICA,PROCEDIMIENTOS;



//gramaticas
start with INICIO;

//INICIO::= prInicio INSTRUCCIONES prFin {:System.out.println("FIN DE ANALISIS");:};
INICIO::= prInicio INSTRUCCIONES prFin {:

    String fileName = "prueba.py";
    try{
    PrintWriter writer = new PrintWriter(fileName);
    writer.println(codigoTraducidoPython);
    writer.close();
    }
    catch (IOException e){
      System.out.println("An error occurred.");
      e.printStackTrace();
      }
:}
;



INSTRUCCIONES::= INSTRUCCION INSTRUCCIONES
                | INSTRUCCION
;


INSTRUCCION::= COMENTARIOS
            | COMENTARIO_MULTI
            | DECLARACIONES
            | ASIGNACIONES
            | IF
            | SELECCION_MULTIPLE
            | CICLO_FOR
            | CICLO_WHILE
            | CICLO_DOWHILE
            | RETORNO
            | METODO
            | FUNCIONES
            | EJECUTAR
            | IMPRIMIR
            | IMPRIMIRNL
            | error tpuntoycoma  {: System.out.println("Falta un ;"); :}
;


//gramatica para comentarios

COMENTARIOS::= tcomentario
;

COMENTARIO_MULTI::= tcomentarioMulti
;

//gramatica para las declaraciones

DECLARACIONES::= DECLARARNUM
            | DECLARARNUML
            | DECLARARCADENA
            | DECLARARCADENAL
            | DECLARARBOOLEANO
            | DECLARARBOOLEANOL
            | DECLARARCARACTER
            | DECLARARCARACTERL
;

//Lista de variables

LISTAVARIABLES::= tvariable LISTAVARIABLES2
            |
;

LISTAVARIABLES2::= tcoma tvariable LISTAVARIABLES2
            | tcoma tvariable
;


//declaracion de numeros

DECLARARNUM::= prIngresar tvariable:a prComo prNumero prConValor tnumero_int:in tpuntoycoma
            | prIngresar tvariable:a prComo prNumero prConValor tnumero_float:fl tpuntoycoma


//{: codigoTraducidoPython+= a + " = " + n + "\n";:}
/*{: 
 codigoTraducidoPython+= a + " = " + n + "\n";
 String fileName = "prueba.py";
    try{
    PrintWriter writer = new PrintWriter(fileName, encoding);
    writer.println(codigoTraducidoPython);
    writer.close();
    }
    catch (IOException e){
      System.out.println("An error occurred.");
      e.printStackTrace();
    }
 :} */           
;

DECLARARNUML::= prIngresar LISTAVARIABLES prComo prNumero prConValor tnumero_int tpuntoycoma
             | prIngresar LISTAVARIABLES prComo prNumero prConValor tnumero_float tpuntoycoma
;

//declaracion de cadenas

DECLARARCADENA::= prIngresar tvariable prComo prCadena prConValor tcadena tpuntoycoma
;

DECLARARCADENAL::= prIngresar LISTAVARIABLES prComo prCadena prConValor tcadena tpuntoycoma
;

//declaracion de booleanos

DECLARARBOOLEANO::= prIngresar tvariable prComo prBoolean prConValor prVerdadero tpuntoycoma
                |  prIngresar tvariable prComo prBoolean prConValor prFalso tpuntoycoma
;

DECLARARBOOLEANOL::= prIngresar LISTAVARIABLES prComo prBoolean prConValor prVerdadero tpuntoycoma
                | prIngresar LISTAVARIABLES prComo prBoolean prConValor prFalso tpuntoycoma
;

//declaracion de caracteres

DECLARARCARACTER::= prIngresar tvariable prComo prCaracter prConValor tcaracter tpuntoycoma
;

DECLARARCARACTERL::= prIngresar LISTAVARIABLES prComo prCaracter prConValor tcaracter tpuntoycoma
;

//declaracion de operaciones




// gramatica para las asignaciones


ASIGNACIONES::= ASIGNARNUM
            | ASIGNARNUML
            | ASIGNARCADENA
            | ASIGNARCADENAL
            | ASIGNARBOOLEANO
            | ASIGNARBOOLEANOL
            | ASIGNARCARACTER
            | ASIGNARCARACTERL
;

//asignando numeros

ASIGNARNUM::= tvariable tflecha tnumero_int tpuntoycoma
            | tvariable tflecha tnumero_float tpuntoycoma
;

ASIGNARNUML::= LISTAVARIABLES tflecha tnumero_int tpuntoycoma
            | LISTAVARIABLES tflecha tnumero_float tpuntoycoma
;

//asignando cadena

ASIGNARCADENA::= tvariable tflecha tcadena tpuntoycoma
;

ASIGNARCADENAL::= LISTAVARIABLES tflecha tcadena tpuntoycoma
;

//asignando booleano

ASIGNARBOOLEANO::= tvariable tflecha prVerdadero tpuntoycoma
                | tvariable tflecha prFalso tpuntoycoma
;

ASIGNARBOOLEANOL::= LISTAVARIABLES tflecha prVerdadero tpuntoycoma
                | LISTAVARIABLES tflecha prFalso tpuntoycoma
;

//asignando caracter

ASIGNARCARACTER::= tvariable tflecha tcaracter tpuntoycoma
;

ASIGNARCARACTERL::= LISTAVARIABLES tflecha tcaracter tpuntoycoma
;

//Sentencias
// IF

IF::= prSi CONDICION prEntonces INSTRUCCIONES prFinSi
    | prSi CONDICION prEntonces INSTRUCCIONES prDeloContrario INSTRUCCION prFinSi
;

CONDICION::= tvariable prEsIGUAL tvariable
            | tvariable prEsIGUAL tnumero_int
            | tvariable prMayorIgual tvariable
            | tvariable
            | tvariable prMenorIgual tvariable
            | tvariable prMayorIgual tnumero_int
            | tvariable prMayorIgual tnumero_float
            | tvariable prMenorIgual tnumero_int
            | tvariable prMenorIgual tnumero_float
;


// SEGUN



// MIENTRAS

CICLO_WHILE::= prMientras CONDICION prHacer INSTRUCCION prFinMientras
            | prMientras CONDICION prHacer prFinMientras
;

//REPETIR HASTA

CICLO_DOWHILE::= prRepetir INSTRUCCION prHastaQue CONDICION
                | prRepetir prHastaQue CONDICION
;

//RETORNO

RETORNO::= prRetornar CONDICION
        | prRetornar tnumero_int
        | prRetornar tnumero_float
        | prRetornar EXPRESIONARITMETICA
;

//METODO

METODO::= prMetodo tvariable INSTRUCCIONES prFinMetodo
        | prMetodo tvariable prConParametros tparA tparC INSTRUCCIONES prFinMetodo
;


//FUNCIONES


//LLAMADA DE FUNCIONES Y METODOS

EJECUTAR::= prEjecutar tvariable:a tparA tparC tpuntoycoma
{: 
System.out.println("ejecutar" + a + "\n");
:}
;



// impresiones

IMPRIMIR::= prImprimir tcadena:a tpuntoycoma {: codigoTraducidoPython += "print" + "(" + a + ")" + "\n" ;:}
            | prImprimir tvariable:b tpuntoycoma {: codigoTraducidoPython+= "print" + "(" +  b + ")" + "\n"; :}
            | prImprimir tparA tvariable:c tparC tpuntoycoma {: codigoTraducidoPython+= "print" + "(" +  c + ")" + "\n"; :}
            | prImprimir tparA tcadena:d tparC tpuntoycoma {: codigoTraducidoPython+= "print" + "(" +  d + ")" + "\n"; :}

;


IMPRIMIRNL::= prImprimirNl tcadena tpuntoycoma
            | prImprimirNl tvariable tpuntoycoma
            | prImprimirNl tparA tvariable tparC tpuntoycoma
            | prImprimirNl tparA tcadena tparC tpuntoycoma
;

